/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}

 */
// var searchRange = function(nums, target) {
//     let left = 0
//     let right = nums.length - 1
//     let start = -1
//     let end = -1
//     //for start point
//     while ( left<=right ){
//         let mid = Math.floor((left + right)/2)
//         if (nums[mid] >= target){
//             right = mid - 1
//         }else{
//             left = mid + 1
//         }
//     }
//     start = left < nums.length && nums[left] == target ? left : -1
//     //for end point 
//      left = 0
//      right = nums.length - 1
//      while ( left<=right ){
//         let mid = Math.floor((left + right)/2)
//         if (nums[mid] <= target){
//             left = mid + 1
//         }else{
//             right = mid - 1
//         }
//     }
//     end = (right >= 0) && (nums[right] == target) ? right : -1
//     return [start , end]
// };
var searchRange = function(nums, target) {
    return [foundPosition(nums,target,true) , foundPosition(nums,target,false)]
}
var foundPosition = function (nums,target,isFirst){
    let left = 0
    let right = nums.length - 1
    let result = -1
    while (left<=right){
        let mid = Math.floor((left + right)/2)
        if(nums[mid]===target){
            result = mid
            if (isFirst){
                right = mid - 1
            }else{
                left = mid + 1
            }
        }else if(nums[mid]<target){
            left = mid +1 
        }else {
            right = mid - 1
        }
    } 
    return result
}
